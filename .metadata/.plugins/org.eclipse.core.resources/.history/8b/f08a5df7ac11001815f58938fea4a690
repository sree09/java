package springMVChibernate.DAO;

import java.util.ArrayList;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.springframework.stereotype.Repository;

import springMVChibernate.Beans.CarBean ;
import springMVChibernate.Beans.UserBean;

@Repository("userDAO")
public class UserDAO {

	Configuration configuration = new Configuration().configure();
	public boolean validUser(String name, String password) {
		
		SessionFactory sessionFactory = new Configuration().configure().addAnnotatedClass(UserBean.class).
		        buildSessionFactory();
		Session session = sessionFactory.openSession();
		Transaction transaction = session.beginTransaction();
		boolean flag = false;
		try{
			UserBean user = (UserBean)session.get(UserBean.class,name);

			transaction.commit();
			if(user.getUserName()!=null && user.getUserName().equals(name) && user.getPassword().equals(password)){
				flag = true;
			}else{
				flag = false;
			}
		}catch(Exception ex){
			if(transaction!=null){
				transaction.rollback();
			}
		}
	
		return flag;
	}
	
	public void addUser(String fname,String uname,String password) {
		SessionFactory sessionFactory = new Configuration().configure().addAnnotatedClass(UserBean.class).
		        buildSessionFactory();
		Session session = sessionFactory.openSession();
		Transaction transaction = session.beginTransaction();

		try{
			UserBean user = new UserBean();
			user.setFullName(fname);
			user.setUserName(uname);
			user.setPassword(password);
			session.saveOrUpdate(user);
			transaction.commit();
			System.out.println("\n\n Details Added \n");
		}catch (HibernateException e) {
			if (transaction != null) {
				transaction.rollback();
			}
			e.printStackTrace();
		}  finally {
			session.close();
		} 
	}
	
	public ArrayList<CarBean> returnCars(){
		ArrayList<CarBean> list = new ArrayList<CarBean>();
		SessionFactory sessionFactory = new Configuration().configure().addAnnotatedClass(CarBean.class).
		        buildSessionFactory();
		Session session = sessionFactory.openSession();
		Transaction transaction = session.beginTransaction();
		try {
			list = (ArrayList<CarBean>)session.createQuery("FROM CarBean").list(); 
			transaction.commit();
		}catch (HibernateException e) {
			if (transaction!=null)
				transaction.rollback();
			e.printStackTrace(); 
		} finally {
			session.close(); 
		}
		return list;
	}
}
